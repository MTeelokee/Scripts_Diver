##################################################################
##################################################################
#			UTILISATION DE LA PLATEFORME DU LPP		
#			09/02/21		
#
#			TEELOKEE MEVINE				
#								
#	Info script : Ce script permet d'extraire des données 
#   relatives à la qualité acoustique d'un fichier son.
#	
#						
##################################################################
##################################################################

## VEUILLEZ NOTER QUE CETTE VERSION DU SCRIPT EST PREVU POUR ANALYSER DES FICHIERS SON 
## AU FORMAT .WAV OU .MP3 SE TROUVANT DANS UN MEME DOSSIER 

# Formulaire pour la recuperation d'informations renseignées par l'utilisateur en input
form Mesure_qualité_acoustique
	comment Dossier dans lequel se trouvent les fichiers son
	sentence cheminSon 
	comment Dossier dans lequel les fichiers seront exportes (le dossier doit exister)
	sentence dossierResultats 
	comment Nom du fichier de resultats
	sentence fichierResultat resultats
endform


# Utilisation de deux variables contenant une expression reguliere permettant de filtrer les sons selon le chemin d'acces et l'extension du fichier 
# dans notre cas tout les fichiers appartenant à un meme dossier dont l'extension se termine par .WAV ou .MP3
regexMp3$ = cheminSon$ + "\*" + ".wav"
regexWav$ = cheminSon$ + "\*" + ".mp3"

#Creation d'une liste en chaine de caractere contenant la denomination des sons en .WAV et .MP3 présent dans le dossier indiqué par l'utilisateur
listeFichSonMp3 = Create Strings as file list: "list_son_mp3",regexMp3$
listeFichSonWav = Create Strings as file list: "list_son_wav",regexWav$
selectObject: listeFichSonMp3
plusObject: listeFichSonWav
listeFichierConc = Append
 
# Recuperation du nombre de chaines de caracteres différentes que notre liste contient et creation de l'en tete de notre tableau qui contiendra nos resultats
nFichiersSon = Get number of strings
tableau = Create Table with column names: "monTableau", 0, "Fichier Duree Amplitude_max Frequence_echantillonage Nombre_de_piste SNR_original SNR_fichier_modif"


# Boucle iterative qui analysera chaque sons .WAV et .MP3 de notre dossier
for iFichier from 1 to nFichiersSon
	selectObject: tableau
	Append row
	selectObject: listeFichierConc
	fichierSon$ = Get string: iFichier
	selectObject: tableau
	iLigne = Get number of rows
	
	# Calcul et attribution des données dans des variables
	son = Read from file: cheminSon$ + "\" + fichierSon$
	tEnregistrement = Get total duration
	fqc_echantillonage = Get sampling frequency
	nb_piste = Get number of channels
	amplitude = Get maximum: 0, 0, "sinc70"


	# Creation du TextGrid afin d'isoler et concatener les segments de silence pour calculer le bruit de notre enregistrement
	txtGridSilence = To TextGrid (silences): 100, 0, -25, 0.1, 0.1, "silent", "sounding"
	nbInterval = Get number of intervals: 1
	soundChain = 0
	for interval from 1 to nbInterval
		selectObject: txtGridSilence
		etiquette$ = Get label of interval: 1, interval
		if etiquette$ = "silent"
			tStart = Get start point: 1, interval
			tEnd = Get end point: 1, interval
			selectObject: son
			extraitSon = Extract part: tStart, tEnd, "rectangular", 1, "yes"
			if soundChain <> 0
				selectObject: soundChain
				Remove
			endif
			selectObject: extraitSon
			soundChain = Concatenate
			selectObject: extraitSon
			Remove
		endif
	endfor
	selectObject: soundChain
	noiseAmpl = Get root-mean-square: 0, 0
	snr_v = 20*log10(amplitude/noiseAmpl)


	# Ajout de nos données dans le tableau
	selectObject: tableau
	Set string value:  iLigne, "Fichier", fichierSon$
	Set numeric value:  iLigne, "Duree", tEnregistrement
	Set numeric value:  iLigne, "Frequence_echantillonage", fqc_echantillonage
	Set numeric value:  iLigne, "Nombre_de_piste", nb_piste
	Set numeric value:  iLigne, "Amplitude_max", amplitude
	Set numeric value:  iLigne, "SNR_original", snr_v


	# Conversion de nos fichier sons dans le format voulu et sauvegarde de ceux-ci
	selectObject: son
	son_mono = Convert to mono
	Override sampling frequency: 16000
	Save as WAV file: dossierResultats$ + "\" + fichierSon$
	selectObject: son_mono
	amplitude = Get maximum: 0, 0, "sinc70"
	noiseAmpl = Get root-mean-square: 0, 0
	snr_f = 20*log10(amplitude/noiseAmpl)

	# Ajout des données du son modifié dans le tableau
	selectObject: tableau
	Set numeric value:  iLigne, "SNR_fichier_modif", snr_f
	selectObject: son, son_mono, soundChain, txtGridSilence
	Remove
endfor

# Sauvegarde de nos resultats dans un fichier texte
selectObject: tableau
Save as tab-separated file: dossierResultats$ + "\" + fichierResultat$ + ".txt"

#Suppresion des derniers objets se trouvant dans la fenetre de praat
selectObject:listeFichierConc, tableau, listeFichSonMp3, listeFichSonWav
Remove



	
	
	






